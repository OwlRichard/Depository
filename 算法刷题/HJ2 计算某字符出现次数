写出一个程序，接受一个由字母、数字和空格组成的字符串，和一个字符，然后输出输入字符串中该字符的出现次数。（不区分大小写字母）

数据范围： 
1 ≤ n ≤ 1000
 
1≤n≤1000 
输入描述：
第一行输入一个由字母、数字和空格组成的字符串，第二行输入一个字符（保证该字符不为空格）。

输出描述：
输出输入字符串中含有该字符的个数。（不区分大小写字母）

示例输入：
ABCabc
A
输出
2



const rl = require("readline").createInterface({ input: process.stdin });
var iter = rl[Symbol.asyncIterator]();
const readline = async () => (await iter.next()).value;

const readyArr = [];

void async function () {
    // Write your code here
    while(line = await readline()){
        readyArr.push(line);
        if(readyArr.length === 2){
            const iptStr = readyArr[0].toLowerCase();
            const target = readyArr[1].toLowerCase();
            let count = 0;
            for(let i = 0;i<iptStr.length;i++){
                if(iptStr[i]===target){
                    count++;
                }
            }
            console.log(count);
        }
    }
}()


方法2
const readline = require("readline") 

const r1 = readline.createInterface({
   input: process.stdin,
   output: process.stdout
})
let arr = []
r1.on("line", (input) => {
   arr.push(input.trim())
   if (arr.length === 2) {
       var lines = arr[0].match(new RegExp('['+arr[1]+']','gi'))
       
       if (lines) {
           console.log(lines.length) 
       }else{
            console.log(0) 
       }
       arr = []
   }   
})
